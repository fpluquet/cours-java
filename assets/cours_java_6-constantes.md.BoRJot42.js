import{_ as i,c as a,o as e,a2 as n}from"./chunks/framework.DYZYzxF5.js";const c=JSON.parse('{"title":"Les constantes en Java","description":"","frontmatter":{},"headers":[],"relativePath":"cours/java/6-constantes.md","filePath":"cours/java/6-constantes.md"}'),t={name:"cours/java/6-constantes.md"};function l(p,s,h,r,k,d){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="les-constantes-en-java" tabindex="-1">Les constantes en Java <a class="header-anchor" href="#les-constantes-en-java" aria-label="Permalink to &quot;Les constantes en Java&quot;">​</a></h1><p>Dans la vie d’un programme, il y a des valeurs qui ne doivent jamais changer : des références fixes, des bornes, des paramètres universels… Pour cela, Java permet de définir des constantes, c’est-à-dire des variables dont la valeur est figée une fois pour toutes.</p><p>Pour déclarer une constante, on utilise le mot-clé <code>final</code>. Cela signifie que la variable ne pourra plus jamais être modifiée après son initialisation.</p><p>Souvent, on combine <code>final</code> avec <code>static</code> pour créer une constante partagée par toutes les instances d’une classe :</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> final</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MA_CONSTANTE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Ici, <code>MA_CONSTANTE</code> est une constante entière, accessible partout dans le programme, et impossible à modifier. Par convention, on écrit les noms de constantes en majuscules, séparées par des underscores, pour bien les distinguer des autres variables.</p><h2 id="exemple-d-utilisation" tabindex="-1">Exemple d’utilisation <a class="header-anchor" href="#exemple-d-utilisation" aria-label="Permalink to &quot;Exemple d’utilisation&quot;">​</a></h2><p>Imaginons que vous souhaitiez calculer le périmètre d’un cercle en utilisant une constante pour la valeur de π :</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Cercle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> final</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.14159</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> perimetre</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> rayon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PI </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rayon;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Utilisation :</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Cercle.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">perimetre</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// p vaudra 62.8318</span></span></code></pre></div><p>Utiliser des constantes rend votre code plus lisible, plus sûr, et plus facile à maintenir. C’est un réflexe à adopter dès que vous manipulez des valeurs fixes ou universelles.</p>`,10)]))}const u=i(t,[["render",l]]);export{c as __pageData,u as default};

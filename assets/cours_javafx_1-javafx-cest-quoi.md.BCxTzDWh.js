import{_ as a,c as t,o as i,a2 as o}from"./chunks/framework.DYZYzxF5.js";const m=JSON.parse(`{"title":"JavaFX, c'est quoi ?","description":"","frontmatter":{},"headers":[],"relativePath":"cours/javafx/1-javafx-cest-quoi.md","filePath":"cours/javafx/1-javafx-cest-quoi.md"}`),n={name:"cours/javafx/1-javafx-cest-quoi.md"};function l(r,e,s,u,c,p){return i(),t("div",null,e[0]||(e[0]=[o('<h1 id="javafx-c-est-quoi" tabindex="-1">JavaFX, c&#39;est quoi ? <a class="header-anchor" href="#javafx-c-est-quoi" aria-label="Permalink to &quot;JavaFX, c&#39;est quoi ?&quot;">​</a></h1><p>JavaFX est la bibliothèque moderne de Java pour créer des interfaces graphiques riches et interactives. Elle remplace progressivement l&#39;ancienne bibliothèque Swing et permet de concevoir des applications graphiques multiplateformes, modernes et réactives.</p><blockquote><p><strong>Info :</strong> JavaFX est à Java ce que WPF est à .NET ou ce que Qt est à C++. C&#39;est l&#39;outil de référence pour faire du GUI en Java aujourd&#39;hui.</p></blockquote><p>JavaFX offre de nombreux avantages :</p><ul><li>Création d&#39;applications graphiques en Java, avec des boutons, menus, animations, graphiques, etc.</li><li>Séparation possible entre la logique de l&#39;interface (FXML) et le code Java, ce qui facilite la maintenance et la collaboration.</li><li>Compatibilité avec des outils modernes (SceneBuilder pour le design visuel, CSS pour le style, etc.) et intégration dans les IDE comme IntelliJ ou Eclipse.</li></ul><blockquote><p><strong>À retenir :</strong> JavaFX est la solution recommandée pour tout projet Java nécessitant une interface graphique moderne, que ce soit pour l&#39;apprentissage ou pour des applications professionnelles.</p></blockquote><h1 id="introduction-a-javafx" tabindex="-1">Introduction à JavaFX <a class="header-anchor" href="#introduction-a-javafx" aria-label="Permalink to &quot;Introduction à JavaFX&quot;">​</a></h1><p>JavaFX facilite la création d&#39;interfaces graphiques modernes en Java. Grâce à son intégration dans les IDE comme IntelliJ IDEA, il est très simple de démarrer un projet JavaFX : il existe souvent une option dédiée lors de la création d&#39;un nouveau projet.</p><blockquote><p><strong>Info :</strong> Même si JavaFX est simple à prendre en main, il est important de bien comprendre la structure d&#39;une application graphique pour éviter les pièges classiques (gestion des événements, organisation des composants, etc.).</p></blockquote><p>Il existe deux grandes manières de concevoir une interface graphique avec JavaFX :</p><ul><li><strong>En codant tout à la main en Java</strong> : <ul><li>Cette méthode permet de bien comprendre le fonctionnement interne de JavaFX et la gestion des composants.</li><li>C&#39;est la méthode privilégiée pour l&#39;apprentissage et les petits projets.</li></ul></li><li><strong>En utilisant le langage FXML (un XML dédié à JavaFX)</strong> : <ul><li>Cette méthode est plus rapide et plus maintenable pour les interfaces complexes.</li><li>Elle permet de séparer la structure de l&#39;interface (FXML) de la logique métier (Java), ce qui facilite la maintenance et le travail en équipe.</li></ul></li></ul><blockquote><p><strong>Info :</strong> Pour apprendre, il est conseillé de commencer par la méthode &quot;à la main&quot;, puis de passer progressivement à FXML pour les projets plus ambitieux. L&#39;utilisation de SceneBuilder permet de concevoir visuellement l&#39;interface et de générer le FXML automatiquement.</p></blockquote><p><strong>Résumé</strong> :</p><ul><li>JavaFX est la technologie moderne pour le développement d&#39;interfaces graphiques en Java.</li><li>Elle favorise la séparation du code et de l&#39;interface, la réutilisabilité et la maintenabilité.</li><li>Elle s&#39;appuie sur des concepts clairs (scènes, noeuds, layouts) et des outils puissants (SceneBuilder, CSS, FXML).</li></ul><blockquote><p><strong>Info :</strong> Pour aller plus loin, explore la documentation officielle de JavaFX et expérimente avec SceneBuilder pour découvrir tout le potentiel de la technologie.</p></blockquote>',15)]))}const v=a(n,[["render",l]]);export{m as __pageData,v as default};

import{_ as i,c as e,o as a,a2 as t}from"./chunks/framework.Df9258VE.js";const c=JSON.parse('{"title":"FXML et interfaces déclaratives en JavaFX","description":"","frontmatter":{},"headers":[],"relativePath":"cours/javafx/3-FXML.md","filePath":"cours/javafx/3-FXML.md"}'),n={name:"cours/javafx/3-FXML.md"};function l(r,s,h,p,o,d){return a(),e("div",null,s[0]||(s[0]=[t(`<h1 id="fxml-et-interfaces-declaratives-en-javafx" tabindex="-1">FXML et interfaces déclaratives en JavaFX <a class="header-anchor" href="#fxml-et-interfaces-declaratives-en-javafx" aria-label="Permalink to &quot;FXML et interfaces déclaratives en JavaFX&quot;">​</a></h1><p>JavaFX permet de séparer la structure de l’interface graphique du code Java grâce à FXML, un langage basé sur XML. Cela facilite la maintenance, la réutilisation et la collaboration entre développeurs et designers.</p><h2 id="pourquoi-utiliser-fxml" tabindex="-1">Pourquoi utiliser FXML ? <a class="header-anchor" href="#pourquoi-utiliser-fxml" aria-label="Permalink to &quot;Pourquoi utiliser FXML ?&quot;">​</a></h2><ul><li><strong>Lisibilité</strong> : L’interface est décrite dans un fichier texte, facile à lire et à modifier.</li><li><strong>Séparation des rôles</strong> : Le développeur Java s’occupe de la logique, le designer de l’interface.</li><li><strong>Productivité</strong> : On peut utiliser des outils visuels comme SceneBuilder pour créer l’interface sans écrire de code Java.</li></ul><h2 id="qu-est-ce-que-fxml" tabindex="-1">Qu’est-ce que FXML ? <a class="header-anchor" href="#qu-est-ce-que-fxml" aria-label="Permalink to &quot;Qu’est-ce que FXML ?&quot;">​</a></h2><p>FXML est un format XML spécifique à JavaFX. Il permet de décrire la hiérarchie des composants (boutons, champs, conteneurs, etc.) dans un fichier <code>.fxml</code>.</p><p><strong>Exemple de fichier FXML simple :</strong></p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;?</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">xml</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> encoding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;UTF-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">?&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;?</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> javafx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.scene.control.*?&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;?</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">import</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> javafx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.scene.layout.*?&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">AnchorPane</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> xmlns:fx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://javafx.com/fxml&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">children</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Cliquez-moi !&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> layoutX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;100&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> layoutY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;80&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">TextField</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> layoutX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;100&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> layoutY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;120&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">children</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">AnchorPane</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>Dans cet exemple, on décrit une interface avec un bouton et un champ de texte, placés dans un <code>AnchorPane</code>.</p><h2 id="comment-lier-fxml-et-java" tabindex="-1">Comment lier FXML et Java ? <a class="header-anchor" href="#comment-lier-fxml-et-java" aria-label="Permalink to &quot;Comment lier FXML et Java ?&quot;">​</a></h2><p>Pour relier le fichier FXML à votre code Java, on utilise la classe <code>FXMLLoader</code> :</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AnchorPane root </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FXMLLoader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getResource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;monfichier.fxml&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Scene scene </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Scene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(root);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">primaryStage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setScene</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scene);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">primaryStage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h2 id="probleme-courant-location-is-not-defined" tabindex="-1">Problème courant : &quot;Location is not defined&quot; <a class="header-anchor" href="#probleme-courant-location-is-not-defined" aria-label="Permalink to &quot;Problème courant : &quot;Location is not defined&quot;&quot;">​</a></h2><p>Si vous obtenez une erreur du type :</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>javafx.fxml.LoadException: ... Location is not defined</span></span></code></pre></div><p>cela signifie que le fichier FXML n&#39;a pas été trouvé à l&#39;emplacement indiqué dans votre code Java.</p><p>Le <code>getResource(&quot;monfichier.fxml&quot;)</code> doit pointer vers le bon chemin du fichier FXML dans votre projet. Java va commencer à chercher dans le dossier de ressources du package de la classe pointée (<code>getClass()</code>). Si nous sommes dans le classe <code>Main</code> du package <code>org.example</code>, Java cherchera dans le fichier <code>src/main/resources/org/example/monfichier.xml</code>.</p><p><strong>Vérifiez que :</strong></p><ul><li>Le chemin passé à <code>FXMLLoader.load(getClass().getResource(&quot;monfichier.fxml&quot;))</code> est correct et respecte la casse.</li><li>Le fichier FXML est bien dans le dossier de ressources de votre projet (souvent <code>src/main/resources</code> ou à la racine du classpath).</li><li>Le nom du fichier et son extension sont corrects.</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Si le fichier FXML est dans un sous-dossier, indiquez le chemin relatif, par exemple : <code>&quot;/fxml/monfichier.fxml&quot;</code>.</p></div><h2 id="utiliser-scenebuilder" tabindex="-1">Utiliser SceneBuilder <a class="header-anchor" href="#utiliser-scenebuilder" aria-label="Permalink to &quot;Utiliser SceneBuilder&quot;">​</a></h2><p>SceneBuilder est un éditeur graphique qui permet de créer des interfaces FXML par glisser-déposer. Il génère le fichier FXML automatiquement, que l’on peut ensuite charger dans son application JavaFX.</p><h2 id="resume" tabindex="-1">Résumé <a class="header-anchor" href="#resume" aria-label="Permalink to &quot;Résumé&quot;">​</a></h2><ul><li>FXML = structure de l’interface en XML</li><li>Contrôleur Java = logique de l’application</li><li>FXMLLoader = fait le lien entre les deux</li><li>SceneBuilder = outil visuel pour créer du FXML</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Utiliser FXML rend vos interfaces plus modulaires, maintenables et collaboratives !</p></div>`,25)]))}const u=i(n,[["render",l]]);export{c as __pageData,u as default};
